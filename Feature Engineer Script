library(tidyverse)

#this below will prob have to be sourced...
nba <- read_rds("nba_pbp_full_96_97.rds")

#all the feature engineering calls:
nba2 <- nba %>%
  #take out early 1997 season
  mutate(yr_96_97 = if_else(year == 1997 & month > 7, 0, 1)) %>%
  filter(yr_96_97 == 1) %>%
  mutate_at(c("month", "day", "playid"), as.numeric) %>%
  filter(time != "Time") %>%
  separate(time, c("minutes","seconds","tenths"), remove = FALSE) %>%
  mutate_at(c("minutes","seconds","tenths"), as.numeric) %>%
  mutate(quarter = 0) %>%
  mutate(quarter = case_when(
    away_play == "Start of 1st quarter" ~ 1,
    away_play == "Start of 2nd quarter" ~ 2,
    away_play == "Start of 3rd quarter" ~ 3,
    away_play == "Start of 4th quarter" ~ 4,
    away_play == "Start of 1st overtime" ~ 5,
    away_play == "Start of 2nd overtime" ~ 6,
    away_play == "Start of 3rd overtime" ~ 7,
    away_play == "Start of 4th overtime" ~ 7
  )) %>%
  mutate(quarter = ifelse(is.na(quarter), 0, quarter)) %>%
  group_by(gameid) %>%
  mutate(qtr = case_when(
    cumsum(quarter) == 1 ~ 1,
    cumsum(quarter) == 3 ~ 2,
    cumsum(quarter) == 6 ~ 3,
    cumsum(quarter) == 10 ~ 4,
    cumsum(quarter) == 15 ~ 5,
    cumsum(quarter) == 21 ~ 6,
    cumsum(quarter) == 28 ~ 7
  )) %>%
  mutate(play = case_when(
    nchar(away_play) > 0 ~ away_play,
    nchar(away_play) == 0 ~ home_play
  )) %>%
  mutate(shooter = str_extract(
      play, "^.*?(?=\\s+(?:misses|makes)\\b)")) %>%
  mutate(foul_type = case_when(
    str_detect(play, "^Personal foul.*") ~ "Personal",
    str_detect(play, "^Shooting foul.*") ~ "Shooting",
    str_detect(play, "^Personal four by.*") ~ "Personal",
    str_detect(play, "^Loose ball foul.*") ~ "Loose Ball",
    str_detect(play, "^Technical foul.*") ~ "Technical",
    str_detect(play, "^Offensive foul.*") ~ "Offensive",
    str_detect(play, "^Def 3 sec tech foul.*") ~ "Def Three Seconds",
    str_detect(play, "^Flagrant foul type 1.*") ~ "Flagrant 1",
    str_detect(play, "^Away from play foul.*") ~ "Away From Play",
    str_detect(play, "^Flagrant foul type 2.*") ~ "Flagrant 2")) %>%
  mutate(free_throw_foul_type = case_when(
    str_detect(play, ".*?[makes|misses]\\s.*?free\\sthrow.*") ~ lag(foul_type))) %>%
  mutate(free_throw_make = case_when(
    str_detect(play, ".*?makes\\s.*?free\\sthrow.*") ~ "1",
    str_detect(play, ".*?misses\\s.*?free\\sthrow.*") ~ "0",
    str_detect(play, ".*?[^[misses|makes]].*") ~ "na")) %>%
  mutate_at(vars(free_throw_make), as.numeric)  %>%
  #netral plays are listed in both teams so this parses those out
  mutate(possession = if_else(nchar(away_play) > 0 & nchar(home_play) > 0, 
                              "", if_else(nchar(away_play) > 0, 
                                      away_team,
                                      home_team))) %>%
  mutate(away_pts_added = as.numeric(sub("\\D\\+", "",
                                         away_score))) %>%
  mutate(home_pts_added = as.numeric(sub("\\D\\+", "",
                                         home_score))) %>%
  replace_na(list(away_pts_added = 0)) %>%
  replace_na(list(home_pts_added = 0)) %>%
  mutate(away_score_after_shot = cumsum(away_pts_added),
         home_score_after_shot = cumsum(home_pts_added)) %>%
  mutate(away_score_before_shot = lag(cumsum(away_pts_added)),
         home_score_before_shot = lag(cumsum(home_pts_added))) %>%
  mutate(difference_after_play = if_else(possession == home_team,
                                         home_score_after_shot - away_score_after_shot, away_score_after_shot - home_score_after_shot),
         difference_before_play = if_else(possession == home_team,
                                          home_score_before_shot - away_score_before_shot, away_score_before_shot - home_score_before_shot)) %>%
  mutate(fg_length = str_extract(play, "(?<=from ).*?(?= ft)")) %>%
  mutate(fg_result = case_when(
    str_detect(play, "misses") & is.na(free_throw_make) ~ "0",
    str_detect(play, "makes") & is.na(free_throw_make)  ~ "1",
    TRUE ~ "NA"
  )) %>% 
  mutate_at(vars(fg_result), as.numeric) %>%
    #extract shots with ft lengths
  mutate(shot_type = str_extract(play, "(?<=-pt ).*?(?= from)")) %>%
  #combine with shots w no ft length (like layups)
  mutate(shot_type = if_else(is.na(shot_type), str_extract(play, "(?<=-pt ).*"), shot_type)) %>% 
  #find parentheses and remove leaving just shot type
  mutate(shot_type = if_else(str_detect(shot_type, ".*?\\("), str_extract(shot_type, ".*?(?= \\()"), shot_type)) %>%
  mutate(shot_type = trimws(shot_type)) %>%
  #playoff date cutoff will need to be customized per year referencing nba ref
  mutate(playoffs = if_else(month >= 4 & day >= 24, "playoffs", "regular"))







#notes on finding levels from above. Not important but shows how to make sure the casewhen calls account for everything:
    
#heres how I figured out all the foul types:
fouls <- nba2 %>%
  mutate(foul = str_extract(play, "\\bfoul\\b")) %>%
  drop_na(foul) %>%
  select(play) %>%
  mutate(type = str_extract(play, ".*(?=\\bby\\b)")) %>%
  ungroup() %>%
  distinct(type)
